{"version":3,"sources":["meteor://ðŸ’»app/lib/_contants.js","meteor://ðŸ’»app/lib/_startup.js","meteor://ðŸ’»app/lib/accounts.js","meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/lib/helpers.js","meteor://ðŸ’»app/lib/router.js","meteor://ðŸ’»app/lib/schemas.js","meteor://ðŸ’»app/collections/reservations.js","meteor://ðŸ’»app/collections/users.js","meteor://ðŸ’»app/collections/vehicletypes.js","meteor://ðŸ’»app/server/_startup.js","meteor://ðŸ’»app/server/accounts.js","meteor://ðŸ’»app/server/browserpolicy.js","meteor://ðŸ’»app/server/publications.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["CONST = {\r\n  VERSION: 'V0.0.1',\r\n\r\n  DEFAULT_LOCALE: 'fr',\r\n  DEFAULT_DATE_FORMAT: 'DD/MM/YYYY',\r\n  DEFAULT_DATETIME_FORMAT: 'DD/MM/YYYY HH:mm',\r\n\r\n  RESERVATION_STATUSES: {\r\n    CANCELLED: -10,\r\n    CREATED: 0,\r\n    ACCEPTED: 10,\r\n    CONFIRMED: 20,\r\n  },\r\n\r\n  USER_ROLES: {\r\n    CLIENT: 'client',\r\n    DRIVER: 'driver',\r\n    ADMIN: 'admin'\r\n  },\r\n}\r\n\r\nif (Meteor.isServer) {\r\n  CONST.MAIL_FROM = 'no-reply@days.fr'\r\n}\r\n","Meteor.startup(function () {\r\n  // common client / server startup\r\n\r\n  // TODO: replace with i18n\r\n  // Translate validation messages\r\n  SimpleSchema.messages({\r\n    required: '[label] est obligatoire',\r\n    minString: \"[label] doit Ãªtre d'au moins [min] caractÃ¨res\",\r\n    maxString: '[label] ne peut pas dÃ©passer [max] caractÃ¨res',\r\n    minNumber: '[label] doit Ãªtre au moins [min]',\r\n    maxNumber: '[label] ne peut pas dÃ©passer [max]',\r\n    minDate: '[label] doit Ãªtre le ou aprÃ¨s [min]',\r\n    maxDate: '[label] ne peut pas Ãªtre aprÃ¨s [max]',\r\n    badDate: \"[label] n'est pas une date valide\",\r\n    minCount: 'Vous devez spÃ©cifier au moins [minCount] valeurs',\r\n    maxCount: 'Vous ne pouvez pas spÃ©cifier plus de [maxCount] valeurs',\r\n    noDecimal: '[label] doit Ãªtre un entier',\r\n    notAllowed: '[value] est une valeur non autorisÃ©e',\r\n    expectedString: '[label] doit Ãªtre une chaÃ®ne de caractÃ¨res',\r\n    expectedNumber: '[label] doit Ãªtre un chiffre',\r\n    expectedBoolean: '[label] doit Ãªtre un boolÃ©en',\r\n    expectedArray: '[label] doit Ãªtre un tableau',\r\n    expectedObject: '[label] doit Ãªtre un objet',\r\n    expectedConstructor: '[label] doit Ãªtre un [type]',\r\n    regEx: [\r\n      { msg: \"[label] Ã©chec de la validation de l'expression rÃ©guliÃ¨re\" },\r\n      { exp: SimpleSchema.RegEx.Email, msg: '[label] doit Ãªtre une adresse e-mail valide' },\r\n      { exp: SimpleSchema.RegEx.WeakEmail, msg: '[label] doit Ãªtre une adresse e-mail valide' },\r\n      { exp: SimpleSchema.RegEx.Domain, msg: '[label] doit Ãªtre un nom de domaine valide' },\r\n      { exp: SimpleSchema.RegEx.WeakDomain, msg: '[label] doit Ãªtre un nom de domaine valide' },\r\n      { exp: SimpleSchema.RegEx.IP, msg: '[label] doit Ãªtre une adresse IPv4 ou IPv6 valide' },\r\n      { exp: SimpleSchema.RegEx.IPv4, msg: '[label] doit Ãªtre une adresse IPv4 valide' },\r\n      { exp: SimpleSchema.RegEx.IPv6, msg: '[label] doit Ãªtre une adresse IPv6 valide' },\r\n      { exp: SimpleSchema.RegEx.Url, msg: '[label] doit Ãªtre une URL valide' },\r\n      { exp: SimpleSchema.RegEx.Id, msg: '[label] doit Ãªtre un ID alphanumÃ©rique valide' }\r\n    ],\r\n    keyNotInSchema: \"[key] n'est pas autorisÃ© par le schÃ©ma\"\r\n  })\r\n// Defaults\r\n// SimpleSchema.messages({\r\n//     required: \"[label] is required\",\r\n//     minString: \"[label] must be at least [min] characters\",\r\n//     maxString: \"[label] cannot exceed [max] characters\",\r\n//     minNumber: \"[label] must be at least [min]\",\r\n//     maxNumber: \"[label] cannot exceed [max]\",\r\n//     minDate: \"[label] must be on or after [min]\",\r\n//     maxDate: \"[label] cannot be after [max]\",\r\n//     badDate: \"[label] is not a valid date\",\r\n//     minCount: \"You must specify at least [minCount] values\",\r\n//     maxCount: \"You cannot specify more than [maxCount] values\",\r\n//     noDecimal: \"[label] must be an integer\",\r\n//     notAllowed: \"[value] is not an allowed value\",\r\n//     expectedString: \"[label] must be a string\",\r\n//     expectedNumber: \"[label] must be a number\",\r\n//     expectedBoolean: \"[label] must be a boolean\",\r\n//     expectedArray: \"[label] must be an array\",\r\n//     expectedObject: \"[label] must be an object\",\r\n//     expectedConstructor: \"[label] must be a [type]\",\r\n//     regEx: [\r\n//         {msg: \"[label] failed regular expression validation\"},\r\n//         {exp: SimpleSchema.RegEx.Email, msg: \"[label] must be a valid e-mail address\"},\r\n//         {exp: SimpleSchema.RegEx.WeakEmail, msg: \"[label] must be a valid e-mail address\"},\r\n//         {exp: SimpleSchema.RegEx.Domain, msg: \"[label] must be a valid domain\"},\r\n//         {exp: SimpleSchema.RegEx.WeakDomain, msg: \"[label] must be a valid domain\"},\r\n//         {exp: SimpleSchema.RegEx.IP, msg: \"[label] must be a valid IPv4 or IPv6 address\"},\r\n//         {exp: SimpleSchema.RegEx.IPv4, msg: \"[label] must be a valid IPv4 address\"},\r\n//         {exp: SimpleSchema.RegEx.IPv6, msg: \"[label] must be a valid IPv6 address\"},\r\n//         {exp: SimpleSchema.RegEx.Url, msg: \"[label] must be a valid URL\"},\r\n//         {exp: SimpleSchema.RegEx.Id, msg: \"[label] must be a valid alphanumeric ID\"}\r\n//     ],\r\n//     keyNotInSchema: \"[key] is not allowed by the schema\"\r\n// })\r\n})\r\n","T9n.setLanguage('fr')\r\n\r\nif (Meteor.isClient) {\r\n  T9n.map('fr', {\r\n    'Required Field': 'Champ obligatoire',\r\n    'Invalid email': 'Email non-valide',\r\n    'Minimum required length: 6': 'Au moins 6 caractÃ¨res',\r\n    'Minimum required length: 5': 'Au moins 5 caractÃ¨res',\r\n    error: {\r\n      accounts: {\r\n        'Login forbidden': 'Connexion interdite'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nAccounts.config({\r\n  sendVerificationEmail: true\r\n})\r\n\r\n// Options\r\nAccountsTemplates.configure({\r\n  defaultLayout: 'layout',\r\n  // defaultLayoutRegions: {\r\n  //   nav: 'nav',\r\n  //   footer: 'footer',\r\n  // },\r\n  defaultContentRegion: 'content',\r\n  showForgotPasswordLink: true,\r\n  overrideLoginErrors: true,\r\n  enablePasswordChange: true,\r\n\r\n  // sendVerificationEmail: true,\r\n  // enforceEmailVerification: true,\r\n  // confirmPassword: true,\r\n  // continuousValidation: false,\r\n  // displayFormLabels: true,\r\n  // forbidClientAccountCreation: true,\r\n  // formValidationFeedback: true,\r\n  // homeRoutePath: '/',\r\n  // showAddRemoveServices: false,\r\n  // showPlaceholders: true,\r\n\r\n  negativeValidation: true,\r\n  positiveValidation: true,\r\n  negativeFeedback: false,\r\n  positiveFeedback: true,\r\n\r\n// Privacy Policy and Terms of Use\r\n// privacyUrl: 'privacy',\r\n// termsUrl: 'terms-of-use',\r\n})\r\n\r\nAccountsTemplates.addFields([\r\n  {\r\n    _id: 'firstName',\r\n    type: 'text',\r\n    displayName: 'PrÃ©nom',\r\n    placeholder: 'PrÃ©nom',\r\n    required: true\r\n  },\r\n  {\r\n    _id: 'lastName',\r\n    type: 'text',\r\n    displayName: 'Nom',\r\n    placeholder: 'Nom',\r\n    required: true\r\n  },\r\n  // {\r\n  //   _id: 'birthday',\r\n  //   type: 'text',\r\n  //   displayName: 'Date de naissance',\r\n  //   required: false\r\n  // },\r\n  {\r\n    _id: 'phone',\r\n    type: 'tel',\r\n    displayName: 'TÃ©lÃ©phone',\r\n    placeholder: 'TÃ©lÃ©phone',\r\n    required: true,\r\n    minLength: 6,\r\n    // re: /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g,\r\n    re: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\r\n    errStr: 'TÃ©lÃ©phone non-valide'\r\n  },\r\n// {\r\n//   _id: 'role',\r\n//   type: 'radio',\r\n//   displayName: 'S'enregistrer comme',\r\n//   select: [\r\n//     {\r\n//       text: 'Client',\r\n//       value: CONST.USER_ROLES.CLIENT,\r\n//     }, {\r\n//       text: 'Chauffeur',\r\n//       value: CONST.USER_ROLES.DRIVER,\r\n//     }\r\n//   ],\r\n// },\r\n// {\r\n//   _id: 'license',\r\n//   type: 'text',\r\n//   displayName: 'Immatriculation',\r\n//   //required: true,\r\n// },\r\n// {\r\n//   _id: 'vehicleType',\r\n//   type: 'select',\r\n//   displayName: 'Type de vÃ©hicule',\r\n//   //required: true,\r\n//   // select: function() {\r\n//   //   return VehicleTypes.find().fetch().map(function (doc) {\r\n//   //     return doc.name\r\n//   //   })\r\n//   // },\r\n// },\r\n// {\r\n//   _id: 'color',\r\n//   type: 'text',\r\n//   displayName: 'Couleur',\r\n//   //required: true,\r\n// },\r\n// {\r\n//   _id: 'photo',\r\n//   type: 'text',\r\n//   displayName: 'Photo',\r\n//   //required: true,\r\n// },\r\n// {\r\n//   _id: 'number',\r\n//   type: 'text',\r\n//   displayName: 'NumÃ©ro',\r\n//   //required: true,\r\n// },\r\n// {\r\n//   _id: 'validThru',\r\n//   type: 'text',\r\n//   displayName: 'ValiditÃ©',\r\n//   //required: true,\r\n// },\r\n// {\r\n//   _id: 'cvv',\r\n//   type: 'text',\r\n//   displayName: 'CVV',\r\n//   //required: true,\r\n// },\r\n// {\r\n//   _id: 'name',\r\n//   type: 'text',\r\n//   displayName: 'Nom',\r\n//   //required: true,\r\n// },\r\n])\r\n","VehicleTypes = new Mongo.Collection('vehicletypes')\r\nReservations = new Mongo.Collection('reservations')\r\n","if (typeof Helpers === 'undefined' || Helpers === null) {\r\n  Helpers = {}\r\n}\r\n\r\nHelpers.isAdmin = function () {\r\n  return Roles.userIsInRole(this.userId, [CONST.USER_ROLES.ADMIN])\r\n}\r\n\r\nHelpers.isDriver = function () {\r\n  // return Roles.userIsInRole(Meteor.user(), [CONST.USER_ROLES.DRIVER])\r\n  return Roles.userIsInRole(this.userId, [CONST.USER_ROLES.DRIVER])\r\n}\r\n\r\nHelpers.getFullName = function (firstName, lastName) {\r\n  return firstName + ' ' + lastName\r\n}\r\n\r\nif (Meteor.isServer) {\r\n  // Server side helpers\r\n  if (typeof Helpers === 'undefined' || Helpers === null) {\r\n    Helpers = {}\r\n  }\r\n\r\n  Helpers.sendEmail = function (to, from, subject, text) {\r\n    check([to, from, subject, text], [String])\r\n\r\n    // Let other method calls from the same client start running,\r\n    // without waiting for the email sending to complete.\r\n    // this.unblock()\r\n\r\n    // console.log('sendEmail: '.concat(to, ', ', from, ', ', subject, ', ', text))\r\n\r\n    Email.send({\r\n      to: to,\r\n      from: from,\r\n      subject: subject,\r\n      text: text\r\n    })\r\n  }\r\n\r\n  Helpers.notifyNewReservation = function (email) {\r\n    check(email, String)\r\n\r\n    var subject = 'Nouvelle reservation'\r\n    var text = 'Bonjour,\\r\\n\\r\\nune nouvelle reservation est disponible.'\r\n\r\n    Helpers.sendEmail(email, CONST.MAIL_FROM, subject, text)\r\n  }\r\n\r\n  Helpers.notifyReservationAcceptance = function (email) {\r\n    check(email, String)\r\n\r\n    var subject = 'Reservation confirmÃ©e'\r\n    var text = 'Bonjour,\\r\\n\\r\\nVotre reservation est confirmÃ©e.\\r\\n\\r\\nDays'\r\n\r\n    Helpers.sendEmail(email, CONST.MAIL_FROM, subject, text)\r\n  }\r\n\r\n  Helpers.notifyReservationConfirmation = function (email) {\r\n    check(email, String)\r\n\r\n    var subject = 'Reservation effectuÃ©e'\r\n    var text = 'Bonjour,\\r\\n\\r\\nVotre reservation est effectuÃ©e.\\r\\n\\r\\nDays'\r\n\r\n    Helpers.sendEmail(email, CONST.MAIL_FROM, subject, text)\r\n  }\r\n\r\n  Helpers.notifyReservationCancellation = function (email) {\r\n    check(email, String)\r\n\r\n    var subject = 'Reservation annulÃ©e'\r\n    var text = 'Bonjour,\\r\\n\\r\\nVotre reservation est annulÃ©e.\\r\\n\\r\\nDays'\r\n\r\n    Helpers.sendEmail(email, CONST.MAIL_FROM, subject, text)\r\n  }\r\n}\r\n","var publicRoutes = FlowRouter.group({\r\n  name: 'public'\r\n})\r\nvar securedRoutes = FlowRouter.group({\r\n  prefix: '/s',\r\n  name: 'secured',\r\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\r\n// triggersEnter: [function (context, redirect) {\r\n//     //if(!Roles.userIsInRole(Meteor.user(), ['driver'])) {\r\n//     if(!(Meteor.loggingIn() || Meteor.user())) {            \r\n//         FlowRouter.go(FlowRouter.path('/notAuthorized'))\r\n//     }\r\n// }]\r\n})\r\n\r\npublicRoutes.route('/', {\r\n  name: 'home',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'home' })\r\n  }\r\n})\r\n\r\npublicRoutes.route('/services', {\r\n  name: 'services',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'services' })\r\n  }\r\n})\r\n\r\npublicRoutes.route('/drivers', {\r\n  name: 'drivers',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'drivers' })\r\n  }\r\n})\r\n\r\npublicRoutes.route('/vehicles', {\r\n  name: 'vehicles',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'vehicles' })\r\n  }\r\n})\r\n\r\npublicRoutes.route('/values', {\r\n  name: 'values',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'values' })\r\n  }\r\n})\r\n\r\npublicRoutes.route('/reservation', {\r\n  name: 'reservation',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'reservation' })\r\n  }\r\n})\r\n\r\npublicRoutes.route('/notAuthorized', {\r\n  name: 'notAuthorized',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'notAuthorized' })\r\n  }\r\n})\r\n\r\nsecuredRoutes.route('/reservations', {\r\n  name: 'reservations',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'reservations' })\r\n  }\r\n})\r\n\r\nsecuredRoutes.route('/profile', {\r\n  name: 'profile',\r\n  action(pathParams, queryParams) {\r\n    BlazeLayout.render('layout', { content: 'profile' })\r\n  }\r\n})\r\n\r\nFlowRouter.notFound = {\r\n  action: function () {\r\n    BlazeLayout.render('layout', { content: 'pageNotFound' })\r\n  }\r\n}\r\n\r\n// Routes\r\nAccountsTemplates.configureRoute('changePwd')\r\nAccountsTemplates.configureRoute('forgotPwd')\r\nAccountsTemplates.configureRoute('resetPwd')\r\nAccountsTemplates.configureRoute('signIn')\r\nAccountsTemplates.configureRoute('signUp')\r\nAccountsTemplates.configureRoute('verifyEmail')\r\n\r\n// FlowRouter.route('/post/:slug', {\r\n//   action: function() {\r\n//     BlazeLayout.render('layout', { content: 'post' })\r\n//   }\r\n// })\r\n","Schema = {}\r\n\r\nSchema.getVehicleTypes = function getVehicleTypes () {\r\n  return VehicleTypes.find().fetch().map(function (doc) {\r\n    return doc.name\r\n  })\r\n}\r\n\r\nSchema.VehicleType = new SimpleSchema({\r\n  name: { label: 'Type de vÃ©hicule', type: String },\r\n  rate: { label: 'Tarif', type: Number, decimal: true }\r\n})\r\n\r\n// Schema.UserCountry = new SimpleSchema({\r\n//     name: {\r\n//         type: String\r\n//     },\r\n//     code: {\r\n//         type: String,\r\n//         regEx: /^[A-Z]{2}$/\r\n//     }\r\n// })\r\n\r\nSchema.Vehicle = new SimpleSchema({\r\n  license: { type: String },\r\n  vehicleType: { label: 'Type de vÃ©hicule', type: String, allowedValues: Schema.getVehicleTypes() },\r\n  color: { type: String },\r\n  'photos.$': { type: String }\r\n})\r\n\r\nSchema.CreditCard = new SimpleSchema({\r\n  num: { type: String },\r\n  validThruM: { type: Number, min: 1, max: 12 },\r\n  validThruY: { type: Number },\r\n  cvv: { type: String },\r\n  name: { type: String }\r\n})\r\n\r\nSchema.Profile = new SimpleSchema({\r\n  // gender: {\r\n  //     type: String,\r\n  //     allowedValues: ['M', 'Mme', 'Mlle']\r\n  //     //,optional: true\r\n  // },\r\n  firstName: {\r\n    type: String\r\n  // ,optional: true\r\n  },\r\n  lastName: {\r\n    type: String\r\n  // ,optional: true\r\n  },\r\n  birthday: {\r\n    type: Date,        optional: true\r\n  },\r\n  phone: {\r\n    type: String\r\n  // ,optional: true\r\n  },\r\n  vehicle: {\r\n    type: Schema.Vehicle,        optional: true\r\n  },\r\n  creditCard: {\r\n    type: Schema.CreditCard,      optional: true\r\n  }\r\n// website: {\r\n//     type: String,\r\n//     regEx: SimpleSchema.RegEx.Url,\r\n//     optional: true\r\n// },\r\n// country: {\r\n//     type: Schema.UserCountry,\r\n//     optional: true\r\n// }\r\n})\r\n\r\nSchema.User = new SimpleSchema({\r\n  // username: {\r\n  //     type: String,\r\n  //     // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n  //     // optional here because the accounts-password package does its own validation.\r\n  //     // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n  //     optional: true\r\n  // },\r\n  emails: {\r\n    type: Array,\r\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n    // optional here because the accounts-password package does its own validation.\r\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n    optional: true\r\n  },\r\n  'emails.$': {\r\n    type: Object\r\n  },\r\n  'emails.$.address': {\r\n    type: String,\r\n    regEx: SimpleSchema.RegEx.Email\r\n  },\r\n  'emails.$.verified': {\r\n    type: Boolean\r\n  },\r\n  // Use this registered_emails field if you are using splendido:meteor-accounts-emails-field / splendido:meteor-accounts-meld\r\n  // registered_emails: {\r\n  //     type: [Object],\r\n  //     optional: true,\r\n  //     blackbox: true\r\n  // },\r\n  createdAt: {\r\n    type: Date\r\n  },\r\n  profile: {\r\n    type: Schema.Profile,\r\n    optional: true\r\n  },\r\n  // Make sure this services field is in your schema if you're using any of the accounts packages\r\n  services: {\r\n    type: Object,\r\n    optional: true,\r\n    blackbox: true\r\n  },\r\n  // Add `roles` to your schema if you use the meteor-roles package.\r\n  // Option 1: Object type\r\n  // If you specify that type as Object, you must also specify the\r\n  // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\r\n  // Example:\r\n  // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP)\r\n  // You can't mix and match adding with and without a group since\r\n  // you will fail validation in some cases.\r\n  // roles: {\r\n  //     type: Object,\r\n  //     optional: true,\r\n  //     blackbox: true\r\n  // },\r\n  // Option 2: [String] type\r\n  // If you are sure you will never need to use role groups, then\r\n  // you can specify [String] as the type\r\n  roles: {\r\n    type: [String],\r\n    optional: true\r\n  },\r\n  // In order to avoid an 'Exception in setInterval callback' from Meteor\r\n  heartbeat: {\r\n    type: Date,\r\n    optional: true\r\n  }\r\n})\r\n\r\nSchema.Reservation = new SimpleSchema({\r\n  lastname: {label: 'Nom', type: String},\r\n  firstname: {label: 'PrÃ©nom', type: String, optional: true},\r\n  phone: {label: 'TÃ©lÃ©phone', type: String},\r\n  email: {label: 'Email', type: String, regEx: SimpleSchema.RegEx.Email},\r\n  start: {label: 'DÃ©part', type: String},\r\n  end: {label: 'Destination', type: String},\r\n  startAt: {label: 'Le', type: Date},\r\n  // vehicleType: {label: \"Type de vÃ©hicule\", type: Number, defaultValue: 0},\r\n  vehicleType: {label: 'Type de vÃ©hicule', type: String, allowedValues: Schema.getVehicleTypes()},\r\n  price: {label: 'Prix', type: Number, decimal: true, defaultValue: 0.00, min: 0},\r\n  driverId: {label: 'Chauffeur', type: String, regEx: SimpleSchema.RegEx.Id, optional: true},\r\n  status: {label: 'Statut', type: Number, defaultValue: CONST.RESERVATION_STATUSES.CREATED},\r\n  ownerId: {label: 'Id Client', type: String, denyUpdate: true,\r\n    autoValue: function () {\r\n      if (this.isInsert) {\r\n        return Meteor.userId() || 0\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: Meteor.userId() || 0}\r\n      } else {\r\n        this.unset()\r\n      }\r\n  }},\r\n  ownerName: {label: 'Client', type: String, denyUpdate: true,\r\n    autoValue: function () {\r\n      // console.log('{SimpleSchema ownerName} username = '+Meteor.user().username)\r\n      // console.log('{SimpleSchema ownerName} lastname = '+ this.field('lastname').value)\r\n      if (this.isInsert) {\r\n        return Meteor.user() && Meteor.user().username ? Meteor.user().username : this.field('lastname').value\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: Meteor.user() && Meteor.user().username ? Meteor.user().username : this.field('lastname').value}\r\n      } else {\r\n        this.unset()\r\n      }\r\n  }},\r\n  createdAt: {label: 'RÃ©servÃ© le', type: Date, denyUpdate: true,\r\n    autoValue: function () {\r\n      if (this.isInsert) {\r\n        return new Date()\r\n      } else if (this.isUpsert) {\r\n        return {$setOnInsert: new Date()}\r\n      } else {\r\n        this.unset()\r\n      }\r\n  }}\r\n})\r\n","Reservations.attachSchema(Schema.Reservation)\r\n\r\nif (Meteor.isClient) {\r\n  // Update allowed values on client when VehicleTypes gets loaded\r\n  Tracker.autorun(function () {\r\n    Reservations._c2._simpleSchema._schema.vehicleType.allowedValues = Schema.getVehicleTypes()\r\n  })\r\n}\r\n\r\n// if(Meteor.isServer) {\r\n//     // Send emails to drivers\r\n//     Reservations.after.insert(function (userId, doc) {\r\n//         _.each(Meteor.users.find({}, { fields: { 'emails': 1 } }).fetch(), function (user) { Helpers.notifyNewReservation(user.emails[0].address); })\r\n//     })\r\n// }\r\n\r\nMeteor.methods({\r\n  createReservation: function (reservation) {\r\n    if (!Meteor.user() || !Meteor.user().profile) throw new Meteor.Error('no-profile', \"Vous devez completer votre profile avant d'effectuer cette action\")\r\n    if (!Meteor.user().profile.creditCard) throw new Meteor.Error('no-card-info', \"Vous devez ajouter l'information sur votre carte de paiement dans votre profile avant d'effectuer cette action\")\r\n\t\tthrow new Meteor.Error('no-card-info', \"Vous devez ajouter l'information sur votre carte de paiement dans votre profile avant d'effectuer cette action\")\r\n\r\n    reservation.ownerId = Meteor.userId()\r\n    reservation.ownerName = Helpers.getFullName(Meteor.user().profile.firstName, Meteor.user().profile.lastName)\r\n    reservation.createdAt = new Date\r\n\r\n    var id = Reservations.insert(reservation, { validationContext: 'createReservation' })\r\n\r\n    if (Meteor.isServer) {\r\n      this.unblock()\r\n      // Send notification\r\n      try {\r\n        _.each(Meteor.users.find({}, { fields: { 'emails': 1 } }).fetch(), function (user) { Helpers.notifyNewReservation(user.emails[0].address); })\r\n      } catch (error) {\r\n        // throw error\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    return id\r\n  },\r\n  acceptReservation: function (reservationId, userId) {\r\n    // Logged user    \r\n    if (userId !== Meteor.userId()) throw new Meteor.Error('not-authorized', \"Vous n'etes pas authorizes d'effectuer cette action\")\r\n\r\n    // Driver or Admin only  \r\n    // Get reservation\r\n    var r = Reservations.findOne(reservationId)\r\n    if (!r) throw new Meteor.Error('not-found', \"Le document n'a pas Ã©tÃ© trouvÃ©\")\r\n    // Only created may be accepted\r\n    if (r.status > CONST.RESERVATION_STATUSES.CREATED) throw new Meteor.Error('not-applicable', \"N'est pas applicable\")\r\n\r\n    var id = Reservations.update(reservationId, {\r\n      $set: {\r\n        status: CONST.RESERVATION_STATUSES.ACCEPTED,\r\n        driverId: userId // Preparing \"assign to driver\"\r\n      }\r\n    }, {\r\n      validationContext: 'acceptReservation'\r\n    })\r\n\r\n    if (Meteor.isServer) {\r\n      this.unblock()\r\n      // Send notification\r\n      try {\r\n        Helpers.notifyReservationAcceptance(r.email)\r\n      } catch (error) {\r\n        // throw error\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    return id\r\n  },\r\n  confirmReservation: function (reservationId, userId) {\r\n    // Logged user    \r\n    if (userId !== Meteor.userId()) throw new Meteor.Error('not-authorized', \"Vous n'etes pas authorizes d'effectuer cette action\")\r\n    // Driver or Admin only  \r\n    // Get reservation\r\n    var r = Reservations.findOne(reservationId)\r\n    if (!r) throw new Meteor.Error('not-found', \"Le document n'a pas Ã©tÃ© trouvÃ©\")\r\n    // Only accepted may be confirmed\r\n    if (r.status > CONST.RESERVATION_STATUSES.ACCEPTED) throw new Meteor.Error('not-applicable', \"N'est pas applicable\")\r\n\r\n    var id = Reservations.update(reservationId, {\r\n      $set: {\r\n        status: CONST.RESERVATION_STATUSES.CONFIRMED\r\n      }\r\n    }, {\r\n      validationContext: 'confirmReservation'\r\n    })\r\n\r\n    if (Meteor.isServer) {\r\n      this.unblock()\r\n      // Send notification\r\n      try {\r\n        Helpers.notifyReservationConfirmation(r.email)\r\n      } catch (error) {\r\n        // throw error\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    return id\r\n  },\r\n  cancelReservation: function (reservationId, userId) {\r\n    // Logged user    \r\n    if (userId !== Meteor.userId()) throw new Meteor.Error('not-authorized', \"Vous n'etes pas authorizes d'effectuer cette action\")\r\n    // Driver or Admin only  \r\n    // Get reservation\r\n    var r = Reservations.findOne(reservationId)\r\n    if (!r) throw new Meteor.Error('not-found', \"Le document n'a pas Ã©tÃ© trouvÃ©\")\r\n\r\n    var id = Reservations.update(reservationId, {\r\n      $set: {\r\n        status: CONST.RESERVATION_STATUSES.CANCELLED\r\n      }\r\n    }, {\r\n      validationContext: 'cancelReservation'\r\n    })\r\n\r\n    if (Meteor.isServer) {\r\n      this.unblock()\r\n      // Send notification\r\n      try {\r\n        Helpers.notifyReservationCancellation(r.email)\r\n      } catch (error) {\r\n        // throw error\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    return id\r\n  },\r\n})\r\n\r\n// // Define a namespace for Methods related to the Reservations collection\r\n// // Allows overriding for tests by replacing the implementation (2)\r\n// Reservations.methods = {}\r\n\r\n// Reservations.methods.insert = new ValidatedMethod({\r\n//   name: 'Reservations.methods.insert',\r\n//   // Factor out validation so that it can be run independently (1)\r\n//   validate: Reservations.schema.validator(),\r\n//   // Factor out Method body so that it can be called independently (3)\r\n//   run(newReservation) {\r\n//       newReservation.price = -11\r\n//     var id = Reservations.insert(newReservation, {validationContext: 'Reservations.methods.insert'})\r\n//     return id\r\n//   }\r\n// })\r\n\r\n// Reservations.methods.confirm = new ValidatedMethod({\r\n//   name: 'Reservations.methods.confirm',\r\n//   // Factor out validation so that it can be run independently (1)\r\n//   validate: Reservations.schema.validator(),\r\n//   // Factor out Method body so that it can be called independently (3)\r\n//   run(newReservation) {\r\n//       newReservation.price = -11\r\n//     var id = Reservations.insert(newReservation, {validationContext: 'Reservations.methods.insert'})\r\n//     return id\r\n//   }\r\n// })\r\n\r\n// // This Method encodes the form validation requirements.\r\n// // By defining them in the Method, we do client and server-side\r\n// // validation in one place.\r\n// Reservations.methods.insert = new ValidatedMethod({\r\n//   name: 'Invoices.methods.insert',\r\n//   validate: new SimpleSchema({\r\n//     email: { type: String, regEx: SimpleSchema.RegEx.Email },\r\n//     description: { type: String, min: 5 },\r\n//     amount: { type: String, regEx: /^\\d*\\.(\\d\\d)?$/ }\r\n//   }).validator(),\r\n//   run(newInvoice) {\r\n//     // In here, we can be sure that the newInvoice argument is\r\n//     // validated.\r\n// \r\n//     if (!this.userId) {\r\n//       throw new Meteor.Error('Invoices.methods.insert.not-logged-in',\r\n//         'Must be logged in to create an invoice.')\r\n//     }\r\n// \r\n//     Reservations.insert(newInvoice)\r\n//   }\r\n// })\r\n// \r\n// Todos.methods.updateText = new ValidatedMethod({\r\n//   name: 'Todos.methods.updateText',\r\n//   validate: new SimpleSchema({\r\n//     todoId: { type: String },\r\n//     newText: { type: String }\r\n//   }).validator(),\r\n//   run({ todoId, newText }) {\r\n//     const todo = Todos.findOne(todoId)\r\n// \r\n//     if (!todo.editableBy(this.userId)) {\r\n//       throw new Meteor.Error('Todos.methods.updateText.unauthorized',\r\n//         'Cannot edit todos in a private list that is not yours')\r\n//     }\r\n// \r\n//     Todos.update(todoId, {\r\n//       $set: { text: newText }\r\n//     })\r\n//   }\r\n// })\r\n\r\n// Meteor.methods({\r\n//   createReservation: function(reservation) {\r\n//     // check(Meteor.userId(), String)\r\n//     // check(activity, {\r\n//     //   recipeName: String,\r\n//     //   text: String,\r\n//     //   image: String\r\n//     // })\r\n//     // check(tweet, Boolean)\r\n//     // check(loc, Match.OneOf(Object, null))\r\n//     \r\n//     reservation.ownerId = Meteor.userId()\r\n//     reservation.ownerName = Meteor.user().profile.name\r\n//     reservation.createdAt = new Date\r\n//     \r\n//     var id = Reservations.insert(reservation)\r\n//     \r\n//     return id\r\n//   }\r\n// })\r\n","Meteor.users.attachSchema(Schema.User)\r\n\r\nMeteor.methods({\r\n  updateUserProfile: function (newProfile) {\r\n    var userId = Meteor.userId()\r\n    // var isEmailChanged = currentProfile ? \r\n    //     newProfile.email != currentProfile.email : \r\n\r\n    Meteor.users.update(userId, {\r\n      $set: {\r\n        profile: newProfile\r\n      }\r\n    }, {\r\n      validationContext: 'updateUserProfile'\r\n    })\r\n\r\n    // if (Meteor.isServer) {\r\n    //   this.unblock()\r\n    //   if (isEmailChanged) {\r\n    //     // Send notification\r\n    //     try {\r\n    //       Accounts.sendVerificationEmail()\r\n    //     } catch (error) {\r\n    //       //throw error\r\n    //       console.log(error)\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n  // return id\r\n  },\r\n})\r\n","VehicleTypes.attachSchema(Schema.VehicleType)\r\n\r\n// PrePopulate data\r\n// if (Meteor.isServer && VehicleTypes.find().count() === 0) {\r\nif (Meteor.isServer && !VehicleTypes.findOne()) {\r\n  Meteor.startup(function () {\r\n    VehicleTypes.insert({ name: 'Audi A6', rate: 2.00 })\r\n    VehicleTypes.insert({ name: 'Audi A8', rate: 2.20 })\r\n    VehicleTypes.insert({ name: 'Mercedes Classe E', rate: 2.20 })\r\n    VehicleTypes.insert({ name: 'Mercedes Classe S', rate: 2.50 })\r\n    VehicleTypes.insert({ name: 'Caravelle Minibus', rate: 2.50 })\r\n    VehicleTypes.insert({ name: 'Mercedes Classe V Minibus', rate: 2.50 })\r\n  })\r\n}\r\n","Meteor.startup(function () {\r\n  // code to run on server at startup\r\n  smtp = {\r\n    username: 'foalicensee@outlook.com', // eg: server@gentlenode.com\r\n    password: 'F0@1icensee', // eg: 3eeP1gtizk5eziohfervU\r\n    server: 'smtp-mail.outlook.com', // eg: smtp.live.com \r\n    port: 587 // 25\r\n  }\r\n\r\n  process.env.MAIL_URL = 'smtp://' + encodeURIComponent(smtp.username) + ':' + encodeURIComponent(smtp.password) + '@' + encodeURIComponent(smtp.server) + ':' + smtp.port\r\n  // console.log(process.env.MAIL_URL)\r\n\r\n  Accounts.emailTemplates.siteName = 'Days'\r\n  Accounts.emailTemplates.from = 'Days <foalicensee@outlook.com>'\r\n  Accounts.emailTemplates.resetPassword.subject = function (user) {\r\n    return 'Bienvenue ' + user.profile.displayName\r\n  }\r\n\r\n  Accounts.emailTemplates.resetPassword.text = function (user, url) {\r\n    var signature = 'Days'\r\n    // var president = President.findOne()\r\n    // if (president)\r\n    //    president = Meteor.users.findOne(president.presidentId)\r\n    //    signature = president.profile.displayName + \", the MySite President.\"\r\n\r\n    return 'Cher ' + user.profile.displayName + ',\\n\\n' +\r\n    'Cliquez sur le lien suivant pour mettre un nouveau mot de passe :\\n' +\r\n    url + '\\n\\n' +\r\n    \"Ne l'oubliez pas!!!\\n\\n\\n\" +\r\n    'Cordialement,\\n' +\r\n    signature\r\n  }\r\n\r\n// try {\r\n//     Email.send({\r\n//         from: \"foalicensee@outlook.com\",\r\n//         to: \"wkurtsev@gmail.com\",\r\n//         subject: \"METEOR TEST\",\r\n//         text: \"Meteor test email\"\r\n//     })\r\n// } catch (error) {\r\n//     console.log(error)\r\n// }\r\n// Helpers.notifyNewReservation('wkurtsev@gmail.com')\r\n})\r\n","// Set up login services\r\nMeteor.startup(function () {\r\n  // Add Facebook configuration entry\r\n  /*\r\n  ServiceConfiguration.configurations.update(\r\n    { service: \"facebook\" },\r\n    { $set: {\r\n        appId: \"XXXXXXXXXXXXXXX\",\r\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\r\n      }\r\n    },\r\n    { upsert: true }\r\n  )\r\n  */\r\n\r\n  // Add GitHub configuration entry\r\n  /*\r\n  ServiceConfiguration.configurations.update(\r\n    { service: \"github\" },\r\n    { $set: {\r\n        clientId: \"XXXXXXXXXXXXXXXXXXXX\",\r\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\r\n      }\r\n    },\r\n    { upsert: true }\r\n  )\r\n  */\r\n\r\n  // Add Google configuration entry\r\n  /*\r\n  ServiceConfiguration.configurations.update(\r\n    { service: \"google\" },\r\n    { $set: {\r\n        clientId: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\r\n        client_email: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\r\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXX\"\r\n      }\r\n    },\r\n    { upsert: true }\r\n  )\r\n  */\r\n\r\n  // Add Linkedin configuration entry\r\n  /*\r\n  ServiceConfiguration.configurations.update(\r\n    { service: \"linkedin\" },\r\n    { $set: {\r\n        clientId: \"XXXXXXXXXXXXXX\",\r\n        secret: \"XXXXXXXXXXXXXXXX\"\r\n      }\r\n    },\r\n    { upsert: true }\r\n  )\r\n  */\r\n})\r\n","BrowserPolicy.content.allowEval()\r\nBrowserPolicy.content.allowOriginForAll('*.google.com')\r\nBrowserPolicy.content.allowOriginForAll('*.googleapis.com')\r\nBrowserPolicy.content.allowOriginForAll('*.gstatic.com')\r\nBrowserPolicy.content.allowFontDataUrl()\r\n","Meteor.publish('vehicletypes', function () {\r\n  return VehicleTypes.find()\r\n})\r\n\r\nMeteor.publish('reservations', function () {\r\n  // console.log('publish reservations() this.userId='+this.userId)\r\n  // console.log('publish reservations() Roles.userIsInRole(this.userId, [driver])='+Roles.userIsInRole(this.userId, [CONST.USER_ROLES.DRIVER]))\r\n  if (Helpers.isDriver()) {\r\n    return Reservations.find({},\r\n      { sort: { createdAt: -1 } })\r\n  } else {\r\n    return Reservations.find({ ownerId: this.userId },\r\n      { sort: { createdAt: -1 } })\r\n  }\r\n})\r\n\r\n// search example\r\n// Meteor.publish(\"allItems\", function (searchQuery) {\r\n//   var mongoQuery = {}\r\n//   if(searchQuery){\r\n//     _.each(_.keys(searchQuery), function(key){\r\n//       if(_.isNumber(searchQuery[key])){\r\n//         mongoQuery[key] = searchQuery[key]\r\n//       }else{\r\n//         mongoQuery[key] = {$regex: searchQuery[key], $options: 'i'}\r\n//       }\r\n//     })\r\n//   }\r\n//   return Items.find(mongoQuery,{limit:10})\r\n// })\r\n"]}